<?php

namespace {namespace};

{use}
/**
 * {namespace}\{name}
 *{docs}
 * @method static Collection|{name}[]     all($columns = ['*'])
 * @method static {name}|null             find($id, $columns = ['*'])
 * @method static Collection|{name}[]     findMany($ids, $columns = ['*'])
 * @method static {name}                  findOrNew($id, $columns = ['*'])
 * @method static {name}                  findOrFail($id, $columns = ['*'])
 * @method static {name}|null             first($columns = ['*'])
 * @method static {name}                  firstOrFail($columns = ['*'])
 * @method static {name}                  firstOrNew($attributes, $values = array())
 * @method static {name}                  firstOrCreate($attributes, $values = ['*'])
 * @method static {name}                  updateOrCreate($attributes, $values = ['*'])
 * @method static Collection|{name}[]     get($columns = ['*']){doc_methods}
 */
class {name} extends {base}
{{{const}
    /**
     * The table associated with the model.
     *
     * @var string
     */
    protected $table = '{table}';

    /**
     * The primary key for the model.
     *
     * @var string
     */
    protected $primaryKey = '{key}';

    /**
     * Indicates if the IDs are auto-incrementing.
     *
     * @var bool
     */
    public $incrementing = {incrementing};

    /**
     * Indicates if the model should be timestamped.
     *
     * @var bool
     */
    public $timestamps = {timestamps};

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [{hidden}];

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [{fillable}];

    /**
     * The attributes that aren't mass assignable.
     *
     * @var array
     */
    protected $guarded = [];

    /**
     * The attributes that should be mutated to dates.
     *
     * @var array
     */
    protected $dates = [{dates}];
{property}
    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [{casts}];
{methods}}}
